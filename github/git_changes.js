const { execSync } = require("child_process");
const fs = require("fs");
const path = require("path");

try {
  const gitDir = path.join(__dirname);
  const commitTemplatePath = path.join(__dirname, "COMMIT_TEMPLATE.md");
  const gitChangesPath = path.join(gitDir, "commit_report.md");

  // –ß–∏—Ç–∞–µ–º —à–∞–±–ª–æ–Ω –∫–æ–º–º–∏—Ç–∞
  const commitTemplate = fs.existsSync(commitTemplatePath)
      ? fs.readFileSync(commitTemplatePath, "utf-8").trim()
      : "–®–∞–±–ª–æ–Ω –∫–æ–º–º–∏—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.";

  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤, –≤–∫–ª—é—á–∞—è –Ω–µ–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ
  const trackedStatus = execSync("git status --short", { encoding: "utf-8" }).trim();
  const untrackedFiles = execSync("git ls-files --others --exclude-standard", { encoding: "utf-8" }).trim();

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º diff –¥–∞–∂–µ –¥–ª—è –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å `--no-index`
  const unstagedDiff = execSync("git diff --no-index . . || true", { encoding: "utf-8" }).trim();
  const stagedDiff = execSync("git diff --cached", { encoding: "utf-8" }).trim();

  let output = `# Git Changes Report\n\n`;

  if (trackedStatus) {
    output += `## üìå –ò–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã (Tracked & Untracked):\n\`\`\`\n${trackedStatus}\n\`\`\`\n\n`;
  }

  if (untrackedFiles) {
    output += `## üìå –ù–µ–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ñ–∞–π–ª—ã:\n\`\`\`\n${untrackedFiles}\n\`\`\`\n\n`;
  }

  if (unstagedDiff) {
    output += `## üìå –†–∞–∑–Ω–∏—Ü–∞ (Unstaged Changes):\n\`\`\`diff\n${unstagedDiff}\n\`\`\`\n\n`;
  }

  if (stagedDiff) {
    output += `## üìå –†–∞–∑–Ω–∏—Ü–∞ (Staged Changes):\n\`\`\`diff\n${stagedDiff}\n\`\`\`\n\n`;
  }

  output += `---\n\n## üìú –®–∞–±–ª–æ–Ω –∫–æ–º–º–∏—Ç–∞\n${commitTemplate}\n`;

  fs.writeFileSync(gitChangesPath, output.trim());

  console.log(`‚úÖ  –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ${gitChangesPath}. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª!`);
} catch (error) {
  console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ Git-–∫–æ–º–∞–Ω–¥:", error.message);
}
